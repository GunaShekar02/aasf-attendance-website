[{"/home/guna_shekar02/Documents/aasf-attendance-website/src/index.js":"1","/home/guna_shekar02/Documents/aasf-attendance-website/src/App.js":"2","/home/guna_shekar02/Documents/aasf-attendance-website/src/reportWebVitals.js":"3","/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/useMediaQuery.js":"4","/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Login/Login.js":"5","/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/rollNumberValidation.js":"6","/home/guna_shekar02/Documents/aasf-attendance-website/src/Services/auth.service.js":"7","/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/constants.js":"8","/home/guna_shekar02/Documents/aasf-attendance-website/src/Services/users.service.js":"9","/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Home/Home.js":"10","/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/ResetPassword/ResetPassword.js":"11","/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Attendance/Attendance.js":"12"},{"size":500,"mtime":1608139622560,"results":"13","hashOfConfig":"14"},{"size":983,"mtime":1608151230660,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608139622564,"results":"16","hashOfConfig":"14"},{"size":545,"mtime":1608142757928,"results":"17","hashOfConfig":"14"},{"size":2392,"mtime":1608151124480,"results":"18","hashOfConfig":"14"},{"size":110,"mtime":1608145025012,"results":"19","hashOfConfig":"14"},{"size":276,"mtime":1608145298304,"results":"20","hashOfConfig":"14"},{"size":376,"mtime":1608150154444,"results":"21","hashOfConfig":"14"},{"size":1050,"mtime":1608150868980,"results":"22","hashOfConfig":"14"},{"size":2564,"mtime":1608151845128,"results":"23","hashOfConfig":"14"},{"size":2368,"mtime":1608151881332,"results":"24","hashOfConfig":"14"},{"size":1909,"mtime":1608153170652,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tgmhb5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/guna_shekar02/Documents/aasf-attendance-website/src/index.js",[],["54","55"],"/home/guna_shekar02/Documents/aasf-attendance-website/src/App.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/reportWebVitals.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/useMediaQuery.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Login/Login.js",["56"],"import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./Login.module.css\";\n\nimport logo from \"../../Assets/logo.png\";\n\nimport validRollNumber from \"../../Utils/rollNumberValidation\";\n\nimport { login } from \"../../Services/auth.service\";\nimport { getUserDetails } from \"../../Services/users.service\";\n\nconst Login = (props) => {\n  const [roll, setRoll] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const notify = (message, type) =>\n    toast(message, {\n      type,\n      position: \"bottom-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  const handleLogin = async () => {\n    try {\n      if (loading) return;\n      if (!roll || !password || !validRollNumber(roll))\n        throw { message: \"Please enter a valid roll number and password!\" };\n      setLoading(true);\n      const data = await login(roll, password);\n      const userDetails = await getUserDetails(data.token);\n      console.log(userDetails);\n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\n        \"user\",\n        JSON.stringify({\n          _id: userDetails.user._id,\n          name: userDetails.user.name,\n          rank: userDetails.rank,\n          score:\n            userDetails.user?.score?.technical +\n              userDetails.user?.score?.managerial +\n              userDetails.user?.score?.oratory || 0,\n        })\n      );\n      props.setScreen(2);\n    } catch (err) {\n      notify(err.message || \"Something went wrong! Please try again!\", \"error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.screen}>\n      <img src={logo} className={styles.logo} alt=\"Logo\" />\n      <input\n        type=\"text\"\n        placeholder=\"Roll Number(20XXYYY-ZZZ)\"\n        className={styles.input}\n        value={roll}\n        onChange={({ target: { value } }) => setRoll(value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        className={styles.input}\n        value={password}\n        onChange={({ target: { value } }) => setPassword(value)}\n      />\n      <button className={styles.button} onClick={handleLogin}>\n        {loading ? \"Loading...\" : \"Login\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/rollNumberValidation.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Services/auth.service.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Utils/constants.js",[],["57","58"],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Services/users.service.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Home/Home.js",[],"/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/ResetPassword/ResetPassword.js",["59","60","61","62"],"import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport styles from \"./ResetPassword.module.css\";\n\nimport { resetPassword } from \"../../Services/users.service\";\n\nconst ResetPassword = (props) => {\n  const [currentPassword, setCurrentPassword] = useState();\n  const [newPassword, setNewPassword] = useState();\n  const [repeatPassword, setRepeatPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const notify = (message, type) =>\n    toast(message, {\n      type,\n      position: \"bottom-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n  const handleReset = async () => {\n    try {\n      if (loading) return;\n      if (!currentPassword || !newPassword || !repeatPassword)\n        throw { message: \"Please fill all the fields.\" };\n      if (newPassword.length < 8)\n        throw { message: \"Please select a password of at least 8 characters\" };\n      if (newPassword != repeatPassword)\n        throw { message: \"Repeated password doesn't match!\" };\n\n      setLoading(true);\n      await resetPassword(currentPassword, newPassword);\n      notify(\"Password reset successfully!\", \"success\");\n    } catch (err) {\n      notify(err.message || \"Something went wrong! Please try again!\", \"error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={styles.screen}>\n      <h3 className={styles.home} onClick={() => props.setScreen(0)}>\n        {\"< HOME\"}\n      </h3>\n      <input\n        type=\"password\"\n        placeholder=\"Current Password\"\n        className={styles.input}\n        value={currentPassword}\n        onChange={({ target: { value } }) => setCurrentPassword(value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"New Password\"\n        className={styles.input}\n        value={newPassword}\n        onChange={({ target: { value } }) => setNewPassword(value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Repeat New Password\"\n        className={styles.input}\n        value={repeatPassword}\n        onChange={({ target: { value } }) => setRepeatPassword(value)}\n      />\n      <button className={styles.button} onClick={handleReset}>\n        {loading ? \"Loading...\" : \"Reset\"}\n      </button>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/home/guna_shekar02/Documents/aasf-attendance-website/src/Containers/Attendance/Attendance.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":33,"column":9,"nodeType":"69","messageId":"70","endLine":33,"endColumn":77},{"ruleId":"63","replacedBy":"71"},{"ruleId":"65","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"68","line":29,"column":9,"nodeType":"69","messageId":"70","endLine":29,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":31,"column":9,"nodeType":"69","messageId":"70","endLine":31,"endColumn":80},{"ruleId":"73","severity":1,"message":"74","line":32,"column":23,"nodeType":"75","messageId":"76","endLine":32,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":33,"column":9,"nodeType":"69","messageId":"70","endLine":33,"endColumn":63},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["77"],["78"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]